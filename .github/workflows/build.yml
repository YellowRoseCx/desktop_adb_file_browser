name: Flutter CI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag of desktop_adb_file_browser to build: v1.4.3'
        default: v1.4.3
        required: false
        type: string
  workflow_call:
    inputs:
      version:
        description: 'Version tag of desktop_adb_file_browser to build: v1.4.3'
        default: v1.4.3
        required: false
        type: string

jobs:
  build:
    runs-on: ${{matrix.runner}}

    strategy:
      matrix:
        target: [linux-x64]
        include:
        - target: linux-x64
          os: linux
          arch: x64
          runner: ubuntu-22.04


    steps:
    - uses: actions/checkout@v4
    - name: Linux deps
      if: contains(matrix.runner, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
        sudo snap install snapcraft --classic
        sudo snap install multipass --classic

    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
        cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
        cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
        architecture: ${{matrix.arch}} # optional, x64 or arm64
    - run: flutter --version
    - run: flutter pub get
    - run: flutter build ${{matrix.os}}
      

    - name: Make MSIX Installer
      if: contains(matrix.runner, 'windows')
      run: |
        flutter pub remove archive
        flutter pub add -d msix:^3.16.8
        mkdir publish
        dart run msix:create
        

    - name: Download Inno Setup
      uses: suisei-cn/actions-download-file@v1
      if: contains(matrix.runner, 'windows')
      with:
        url: https://jrsoftware.org/download.php/is.exe
        target: ../

    - name: Install Inno Setup
      if: contains(matrix.runner, 'windows')
      run: '../is.exe /VERYSILENT /NORESTART /ALLUSERS'
      
    - name: Create ISS
      if: contains(matrix.runner, 'windows')
      run: dart ./lib/inno_setup.dart

    - name: Compile Installer
      if: contains(matrix.runner, 'windows')
      run: '& "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" /f innosetup.iss'


      # Linux
    - name: Upload Linux artifacts (archive)
      if: contains(matrix.runner, 'ubuntu')
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}
        path: ./build/linux/**/release/bundle/*
        if-no-files-found: error

    # - name: Upload Linux snap artifacts
    #   if: contains(matrix.runner, 'ubuntu')
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ${{ matrix.target }}
    #     path: ./*.snap
    #     if-no-files-found: error



  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: |
          ls artifacts 
          ls -R artifacts

      - name: Linux artifacts
        run: ls artifacts/linux-x64


      - name: Zip and rename artifacts
        run: |
          cd artifacts/
          zip -r ./linux-x64.zip ./linux-x64

      - name: Upload files to a GitHub release
        id: upload-release
        uses: svenstaro/upload-release-action@2.9.0
        continue-on-error: true
        with:
          file_glob: true
          file: artifacts/linux-x64.zip
          release_name: ${{ inputs.version }}
          tag: ${{ inputs.version }}
          make_latest: true
          prerelease: true
          overwrite: false
